{"ast":null,"code":"import Cors from 'cors';\nimport initMiddleware from '@/lib/init-middleware';\nimport jwt from 'jsonwebtoken';\nimport { courses as Course } from '@/models/index'; // Initialize the cors middleware\n\nconst cors = initMiddleware( // You can read more about the available options here: https://github.com/expressjs/cors#configuration-options\nCors({\n  // Only allow requests with GET, POST and OPTIONS\n  methods: ['GET', 'POST', 'OPTIONS', 'DELETE', 'PUT']\n}));\nexport default (async (req, res) => {\n  await cors(req, res);\n\n  if (!(\"authorization\" in req.headers)) {\n    return res.status(401).json({\n      message: \"No autorization token\"\n    });\n  }\n\n  const {\n    id,\n    title,\n    overview,\n    price,\n    published,\n    duration,\n    lessons,\n    category,\n    profile,\n    cover,\n    preview,\n    course_preview_video\n  } = req.body;\n\n  try {\n    await Course.update({\n      title,\n      overview,\n      price,\n      published,\n      duration,\n      lessons,\n      category,\n      profilePhoto: profile,\n      coverPhoto: cover,\n      course_preview_img: preview,\n      course_preview_video\n    }, {\n      where: {\n        id: id\n      }\n    });\n    res.send(\"Congratulations! Successfully updated the course.\");\n  } catch (error) {\n    console.log(error);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}