{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/AJ/Downloads/Spyberrys/Spyberrys/Spyberrys_app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/AJ/Downloads/Spyberrys/Spyberrys/Spyberrys_app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/AJ/Downloads/Spyberrys/Spyberrys/Spyberrys_app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\AJ\\\\Downloads\\\\Spyberrys\\\\Spyberrys\\\\Spyberrys_app\\\\pages\\\\_app.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport '../public/css/bootstrap.min.css';\nimport '../public/css/animate.min.css';\nimport '../public/css/boxicons.min.css';\nimport '../public/css/meanmenu.min.css';\nimport '../public/css/flaticon.css';\nimport '../node_modules/react-modal-video/css/modal-video.min.css';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport 'react-tabs/style/react-tabs.css';\nimport 'react-image-lightbox/style.css';\nimport '../public/css/style.scss';\nimport '../public/css/responsive.css';\nimport Layout from '../components/_App/Layout';\nimport axios from 'axios';\nimport { parseCookies, destroyCookie } from 'nookies';\nimport { redirectUser } from '../utils/auth';\nimport baseUrl from '../utils/baseUrl';\n\nvar MyApp = function MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  // console.log(pageProps)\n  return /*#__PURE__*/_jsxDEV(Layout, _objectSpread(_objectSpread({}, pageProps), {}, {\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, _this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var Component, ctx, _parseCookies, token, pageProps, isProtectedRoute, ifLoggedIn, payload, url, response, user;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Component = _ref2.Component, ctx = _ref2.ctx;\n            _parseCookies = parseCookies(ctx), token = _parseCookies.token;\n            pageProps = {};\n\n            if (!Component.getInitialProps) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 6;\n            return Component.getInitialProps(ctx);\n\n          case 6:\n            pageProps = _context.sent;\n\n          case 7:\n            if (token) {\n              _context.next = 12;\n              break;\n            }\n\n            // if a user not logged in then user can't access those pages\n            isProtectedRoute = ctx.pathname === '/become-a-teacher' || ctx.pathname === '/my-courses' || ctx.pathname === '/teacher/courses';\n\n            if (isProtectedRoute) {\n              redirectUser(ctx, '/authentication');\n            }\n\n            _context.next = 28;\n            break;\n\n          case 12:\n            // if a user logged in then user can't access those pages\n            ifLoggedIn = ctx.pathname === '/authentication' || ctx.pathname === '/reset-password';\n\n            if (ifLoggedIn) {\n              redirectUser(ctx, '/');\n            }\n\n            _context.prev = 14;\n            payload = {\n              headers: {\n                Authorization: token\n              }\n            };\n            url = \"\".concat(baseUrl, \"/api/v1/auth/account\");\n            _context.next = 19;\n            return axios.get(url, payload);\n\n          case 19:\n            response = _context.sent;\n            user = response.data; // console.log(user)\n            // If user status disabled then user autometically logged out\n\n            if (!user || !user.active) {\n              destroyCookie(ctx, \"token\");\n            }\n\n            pageProps.user = user;\n            _context.next = 28;\n            break;\n\n          case 25:\n            _context.prev = 25;\n            _context.t0 = _context[\"catch\"](14);\n            // console.error(\"Error getting current user\", error);\n            //invalid token\n            // console.log(error)\n            destroyCookie(ctx, \"token\");\n\n          case 28:\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[14, 25]]);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/AJ/Downloads/Spyberrys/Spyberrys/Spyberrys_app/pages/_app.js"],"names":["Layout","axios","parseCookies","destroyCookie","redirectUser","baseUrl","MyApp","Component","pageProps","getInitialProps","ctx","token","isProtectedRoute","pathname","ifLoggedIn","payload","headers","Authorization","url","get","response","user","data","active"],"mappings":";;;;;;;;;;;;AAAA,OAAO,iCAAP;AACA,OAAO,+BAAP;AACA,OAAO,gCAAP;AACA,OAAO,gCAAP;AACA,OAAO,4BAAP;AACA,OAAO,2DAAP;AACA,OAAO,mDAAP;AACA,OAAO,iCAAP;AACA,OAAO,gCAAP;AACA,OAAO,0BAAP;AACA,OAAO,8BAAP;AAEA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,SAA5C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,IAAMC,KAAK,GAAI,SAATA,KAAS,OAA8B;AAAA,MAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACzC;AACA,sBACI,QAAC,MAAD,kCAAYA,SAAZ;AAAA,2BACI,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAPD;;KAAMF,K;;AASNA,KAAK,CAACG,eAAN;AAAA,uEAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASF,YAAAA,SAAT,SAASA,SAAT,EAAoBG,GAApB,SAAoBA,GAApB;AAAA,4BACFR,YAAY,CAACQ,GAAD,CADV,EACZC,KADY,iBACZA,KADY;AAEhBH,YAAAA,SAFgB,GAEJ,EAFI;;AAAA,iBAIjBD,SAAS,CAACE,eAJO;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKEF,SAAS,CAACE,eAAV,CAA0BC,GAA1B,CALF;;AAAA;AAKhBF,YAAAA,SALgB;;AAAA;AAAA,gBAQhBG,KARgB;AAAA;AAAA;AAAA;;AAShB;AACMC,YAAAA,gBAVU,GAUSF,GAAG,CAACG,QAAJ,KAAiB,mBAAjB,IACtBH,GAAG,CAACG,QAAJ,KAAiB,aADK,IAEtBH,GAAG,CAACG,QAAJ,KAAiB,kBAZJ;;AAchB,gBAAGD,gBAAH,EAAoB;AAChBR,cAAAA,YAAY,CAACM,GAAD,EAAM,iBAAN,CAAZ;AACH;;AAhBe;AAAA;;AAAA;AAkBhB;AACMI,YAAAA,UAnBU,GAmBGJ,GAAG,CAACG,QAAJ,KAAiB,iBAAjB,IAChBH,GAAG,CAACG,QAAJ,KAAiB,iBApBJ;;AAqBhB,gBAAGC,UAAH,EAAc;AACVV,cAAAA,YAAY,CAACM,GAAD,EAAM,GAAN,CAAZ;AACH;;AAvBe;AAyBNK,YAAAA,OAzBM,GAyBI;AAAEC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,aAAa,EAAEN;AAAjB;AAAX,aAzBJ;AA0BNO,YAAAA,GA1BM,aA0BGb,OA1BH;AAAA;AAAA,mBA2BWJ,KAAK,CAACkB,GAAN,CAAUD,GAAV,EAAeH,OAAf,CA3BX;;AAAA;AA2BNK,YAAAA,QA3BM;AA4BNC,YAAAA,IA5BM,GA4BCD,QAAQ,CAACE,IA5BV,EA8BZ;AACA;;AACA,gBAAG,CAACD,IAAD,IAAS,CAACA,IAAI,CAACE,MAAlB,EAAyB;AACrBpB,cAAAA,aAAa,CAACO,GAAD,EAAM,OAAN,CAAb;AACH;;AAEDF,YAAAA,SAAS,CAACa,IAAV,GAAiBA,IAAjB;AApCY;AAAA;;AAAA;AAAA;AAAA;AAsCZ;AACA;AACA;AACAlB,YAAAA,aAAa,CAACO,GAAD,EAAM,OAAN,CAAb;;AAzCY;AAAA,6CA+Cb;AACHF,cAAAA,SAAS,EAATA;AADG,aA/Ca;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAoDA,eAAeF,KAAf","sourcesContent":["import '../public/css/bootstrap.min.css'\r\nimport '../public/css/animate.min.css'\r\nimport '../public/css/boxicons.min.css'\r\nimport '../public/css/meanmenu.min.css'\r\nimport '../public/css/flaticon.css'\r\nimport '../node_modules/react-modal-video/css/modal-video.min.css'\r\nimport 'react-accessible-accordion/dist/fancy-example.css'\r\nimport 'react-tabs/style/react-tabs.css'\r\nimport 'react-image-lightbox/style.css'\r\nimport '../public/css/style.scss'\r\nimport '../public/css/responsive.css'\r\n\r\nimport Layout from '../components/_App/Layout';\r\nimport axios from 'axios'\r\nimport { parseCookies, destroyCookie } from 'nookies'\r\nimport { redirectUser } from '../utils/auth'\r\nimport baseUrl from '../utils/baseUrl'\r\n\r\nconst MyApp =  ({ Component, pageProps }) => {\r\n    // console.log(pageProps)\r\n    return (\r\n        <Layout {...pageProps}>\r\n            <Component {...pageProps} />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nMyApp.getInitialProps = async ({ Component, ctx }) => {\r\n    const { token } = parseCookies(ctx);\r\n    let pageProps = {};\r\n\r\n    if(Component.getInitialProps){\r\n        pageProps = await Component.getInitialProps(ctx)\r\n    }\r\n\r\n    if(!token){\r\n        // if a user not logged in then user can't access those pages\r\n        const isProtectedRoute = ctx.pathname === '/become-a-teacher'\r\n        || ctx.pathname === '/my-courses'\r\n        || ctx.pathname === '/teacher/courses'\r\n\r\n        if(isProtectedRoute){\r\n            redirectUser(ctx, '/authentication');\r\n        }\r\n    } else {\r\n        // if a user logged in then user can't access those pages\r\n        const ifLoggedIn = ctx.pathname === '/authentication'\r\n        || ctx.pathname === '/reset-password'\r\n        if(ifLoggedIn){\r\n            redirectUser(ctx, '/')\r\n        }\r\n        try {\r\n            const payload = { headers: { Authorization: token } }\r\n            const url = `${baseUrl}/api/v1/auth/account`\r\n            const response = await axios.get(url, payload)\r\n            const user = response.data\r\n\r\n            // console.log(user)\r\n            // If user status disabled then user autometically logged out\r\n            if(!user || !user.active){\r\n                destroyCookie(ctx, \"token\")\r\n            }\r\n            \r\n            pageProps.user = user\r\n        } catch (error) {\r\n            // console.error(\"Error getting current user\", error);\r\n            //invalid token\r\n            // console.log(error)\r\n            destroyCookie(ctx, \"token\");\r\n        }\r\n    }\r\n  \r\n    // By returning { props: posts }, the Blog component\r\n    // will receive `posts` as a prop at build time\r\n    return {\r\n        pageProps\r\n    }\r\n}\r\n\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}