{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\AJ\\\\Downloads\\\\Spyberrys\\\\Spyberrys\\\\Spyberrys_app\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../public/css/bootstrap.min.css';\nimport '../public/css/animate.min.css';\nimport '../public/css/boxicons.min.css';\nimport '../public/css/meanmenu.min.css';\nimport '../public/css/flaticon.css';\nimport '../node_modules/react-modal-video/css/modal-video.min.css';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport 'react-tabs/style/react-tabs.css';\nimport 'react-image-lightbox/style.css';\nimport '../public/css/style.scss';\nimport '../public/css/responsive.css';\nimport Layout from '../components/_App/Layout';\nimport axios from 'axios';\nimport { parseCookies, destroyCookie } from 'nookies';\nimport { redirectUser } from '../utils/auth';\nimport baseUrl from '../utils/baseUrl';\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  // console.log(pageProps)\n  return /*#__PURE__*/_jsxDEV(Layout, _objectSpread(_objectSpread({}, pageProps), {}, {\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\nMyApp.getInitialProps = async ({\n  Component,\n  ctx\n}) => {\n  const {\n    token\n  } = parseCookies(ctx);\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  }\n\n  if (!token) {\n    // if a user not logged in then user can't access those pages\n    const isProtectedRoute = ctx.pathname === '/become-a-teacher' || ctx.pathname === '/my-courses' || ctx.pathname === '/teacher/courses';\n\n    if (isProtectedRoute) {\n      redirectUser(ctx, '/authentication');\n    }\n  } else {\n    // if a user logged in then user can't access those pages\n    const ifLoggedIn = ctx.pathname === '/authentication' || ctx.pathname === '/reset-password';\n\n    if (ifLoggedIn) {\n      redirectUser(ctx, '/');\n    }\n\n    try {\n      const payload = {\n        headers: {\n          Authorization: token\n        }\n      };\n      const url = `${baseUrl}/api/v1/auth/account`;\n      const response = await axios.get(url, payload);\n      const user = response.data; // console.log(user)\n      // If user status disabled then user autometically logged out\n\n      if (!user || !user.active) {\n        destroyCookie(ctx, \"token\");\n      }\n\n      pageProps.user = user;\n    } catch (error) {\n      // console.error(\"Error getting current user\", error);\n      //invalid token\n      // console.log(error)\n      destroyCookie(ctx, \"token\");\n    }\n  } // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n\n  return {\n    pageProps\n  };\n};\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/AJ/Downloads/Spyberrys/Spyberrys/Spyberrys_app/pages/_app.js"],"names":["Layout","axios","parseCookies","destroyCookie","redirectUser","baseUrl","MyApp","Component","pageProps","getInitialProps","ctx","token","isProtectedRoute","pathname","ifLoggedIn","payload","headers","Authorization","url","response","get","user","data","active","error"],"mappings":";;;;;;;;;AAAA,OAAO,iCAAP;AACA,OAAO,+BAAP;AACA,OAAO,gCAAP;AACA,OAAO,gCAAP;AACA,OAAO,4BAAP;AACA,OAAO,2DAAP;AACA,OAAO,mDAAP;AACA,OAAO,iCAAP;AACA,OAAO,gCAAP;AACA,OAAO,0BAAP;AACA,OAAO,8BAAP;AAEA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,SAA5C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,KAAK,GAAI,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AACzC;AACA,sBACI,QAAC,MAAD,kCAAYA,SAAZ;AAAA,2BACI,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAPD;;AASAF,KAAK,CAACG,eAAN,GAAwB,OAAO;AAAEF,EAAAA,SAAF;AAAaG,EAAAA;AAAb,CAAP,KAA8B;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAAYT,YAAY,CAACQ,GAAD,CAA9B;AACA,MAAIF,SAAS,GAAG,EAAhB;;AAEA,MAAGD,SAAS,CAACE,eAAb,EAA6B;AACzBD,IAAAA,SAAS,GAAG,MAAMD,SAAS,CAACE,eAAV,CAA0BC,GAA1B,CAAlB;AACH;;AAED,MAAG,CAACC,KAAJ,EAAU;AACN;AACA,UAAMC,gBAAgB,GAAGF,GAAG,CAACG,QAAJ,KAAiB,mBAAjB,IACtBH,GAAG,CAACG,QAAJ,KAAiB,aADK,IAEtBH,GAAG,CAACG,QAAJ,KAAiB,kBAFpB;;AAIA,QAAGD,gBAAH,EAAoB;AAChBR,MAAAA,YAAY,CAACM,GAAD,EAAM,iBAAN,CAAZ;AACH;AACJ,GATD,MASO;AACH;AACA,UAAMI,UAAU,GAAGJ,GAAG,CAACG,QAAJ,KAAiB,iBAAjB,IAChBH,GAAG,CAACG,QAAJ,KAAiB,iBADpB;;AAEA,QAAGC,UAAH,EAAc;AACVV,MAAAA,YAAY,CAACM,GAAD,EAAM,GAAN,CAAZ;AACH;;AACD,QAAI;AACA,YAAMK,OAAO,GAAG;AAAEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEN;AAAjB;AAAX,OAAhB;AACA,YAAMO,GAAG,GAAI,GAAEb,OAAQ,sBAAvB;AACA,YAAMc,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAUF,GAAV,EAAeH,OAAf,CAAvB;AACA,YAAMM,IAAI,GAAGF,QAAQ,CAACG,IAAtB,CAJA,CAMA;AACA;;AACA,UAAG,CAACD,IAAD,IAAS,CAACA,IAAI,CAACE,MAAlB,EAAyB;AACrBpB,QAAAA,aAAa,CAACO,GAAD,EAAM,OAAN,CAAb;AACH;;AAEDF,MAAAA,SAAS,CAACa,IAAV,GAAiBA,IAAjB;AACH,KAbD,CAaE,OAAOG,KAAP,EAAc;AACZ;AACA;AACA;AACArB,MAAAA,aAAa,CAACO,GAAD,EAAM,OAAN,CAAb;AACH;AACJ,GA3CiD,CA6ClD;AACA;;;AACA,SAAO;AACHF,IAAAA;AADG,GAAP;AAGH,CAlDD;;AAoDA,eAAeF,KAAf","sourcesContent":["import '../public/css/bootstrap.min.css'\r\nimport '../public/css/animate.min.css'\r\nimport '../public/css/boxicons.min.css'\r\nimport '../public/css/meanmenu.min.css'\r\nimport '../public/css/flaticon.css'\r\nimport '../node_modules/react-modal-video/css/modal-video.min.css'\r\nimport 'react-accessible-accordion/dist/fancy-example.css'\r\nimport 'react-tabs/style/react-tabs.css'\r\nimport 'react-image-lightbox/style.css'\r\nimport '../public/css/style.scss'\r\nimport '../public/css/responsive.css'\r\n\r\nimport Layout from '../components/_App/Layout';\r\nimport axios from 'axios'\r\nimport { parseCookies, destroyCookie } from 'nookies'\r\nimport { redirectUser } from '../utils/auth'\r\nimport baseUrl from '../utils/baseUrl'\r\n\r\nconst MyApp =  ({ Component, pageProps }) => {\r\n    // console.log(pageProps)\r\n    return (\r\n        <Layout {...pageProps}>\r\n            <Component {...pageProps} />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nMyApp.getInitialProps = async ({ Component, ctx }) => {\r\n    const { token } = parseCookies(ctx);\r\n    let pageProps = {};\r\n\r\n    if(Component.getInitialProps){\r\n        pageProps = await Component.getInitialProps(ctx)\r\n    }\r\n\r\n    if(!token){\r\n        // if a user not logged in then user can't access those pages\r\n        const isProtectedRoute = ctx.pathname === '/become-a-teacher'\r\n        || ctx.pathname === '/my-courses'\r\n        || ctx.pathname === '/teacher/courses'\r\n\r\n        if(isProtectedRoute){\r\n            redirectUser(ctx, '/authentication');\r\n        }\r\n    } else {\r\n        // if a user logged in then user can't access those pages\r\n        const ifLoggedIn = ctx.pathname === '/authentication'\r\n        || ctx.pathname === '/reset-password'\r\n        if(ifLoggedIn){\r\n            redirectUser(ctx, '/')\r\n        }\r\n        try {\r\n            const payload = { headers: { Authorization: token } }\r\n            const url = `${baseUrl}/api/v1/auth/account`\r\n            const response = await axios.get(url, payload)\r\n            const user = response.data\r\n\r\n            // console.log(user)\r\n            // If user status disabled then user autometically logged out\r\n            if(!user || !user.active){\r\n                destroyCookie(ctx, \"token\")\r\n            }\r\n            \r\n            pageProps.user = user\r\n        } catch (error) {\r\n            // console.error(\"Error getting current user\", error);\r\n            //invalid token\r\n            // console.log(error)\r\n            destroyCookie(ctx, \"token\");\r\n        }\r\n    }\r\n  \r\n    // By returning { props: posts }, the Blog component\r\n    // will receive `posts` as a prop at build time\r\n    return {\r\n        pageProps\r\n    }\r\n}\r\n\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}