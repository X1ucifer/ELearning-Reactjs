{"ast":null,"code":"'use strict';\n\nconst {\n  Model\n} = require('sequelize');\n\nmodule.exports = (sequelize, Sequelize) => {\n  class User extends Model {\n    /**\n     * Helper method for defining associations.\n     * This method is not a part of Sequelize lifecycle.\n     * The `models/index` file will call this method automatically.\n     */\n    // static associate(models) {\n    //     // define association here\n    //     User.hasMany(models.Course, {\n    //         foreignKey: 'userId'\n    //     })\n    // }\n  }\n\n  ;\n  User.init({\n    id: {\n      type: Sequelize.UUID,\n      defaultValue: Sequelize.UUIDV4,\n      primaryKey: true\n    },\n    name: {\n      type: Sequelize.STRING\n    },\n    email: {\n      type: Sequelize.STRING\n    },\n    isEmailPublic: {\n      type: Sequelize.BOOLEAN,\n      defaultValue: true\n    },\n    password: {\n      type: Sequelize.STRING\n    },\n    designation: {\n      type: Sequelize.TEXT\n    },\n    about: {\n      type: Sequelize.TEXT\n    },\n    location: {\n      type: Sequelize.STRING\n    },\n    phone: {\n      type: Sequelize.STRING\n    },\n    company: {\n      type: Sequelize.STRING\n    },\n    companyUrl: {\n      type: Sequelize.STRING\n    },\n    interests: {\n      type: Sequelize.STRING\n    },\n    passwordResetToken: {\n      type: Sequelize.UUID\n    },\n    passwordUpdatedAt: {\n      type: Sequelize.DATE\n    },\n    emailResetToken: {\n      type: Sequelize.UUID\n    },\n    profilePhoto: {\n      type: Sequelize.STRING\n    },\n    gender: {\n      type: Sequelize.STRING\n    },\n    fb_url: {\n      type: Sequelize.STRING\n    },\n    tw_url: {\n      type: Sequelize.STRING\n    },\n    insta_url: {\n      type: Sequelize.STRING\n    },\n    in_url: {\n      type: Sequelize.STRING\n    },\n    emailConfirmed: {\n      type: Sequelize.BOOLEAN,\n      defaultValue: false\n    },\n    emailConfirmedAt: {\n      type: Sequelize.DATE\n    },\n    as_teacher_apply: {\n      type: Sequelize.BOOLEAN,\n      defaultValue: false\n    },\n    as_teacher_confirmed: {\n      type: Sequelize.BOOLEAN\n    },\n    as_teacher_confirmed_at: {\n      type: Sequelize.DATE\n    },\n    as_teacher_req_desc: {\n      type: Sequelize.TEXT\n    },\n    role: {\n      type: Sequelize.ENUM,\n      values: ['student', 'admin', 'teacher'],\n      defaultValue: 'student'\n    },\n    active: {\n      type: Sequelize.BOOLEAN,\n      defaultValue: true\n    },\n    agreedTerms: {\n      allowNull: false,\n      type: Sequelize.BOOLEAN,\n      defaultValue: false\n    }\n  }, {\n    sequelize,\n    modelName: 'User'\n  });\n  return User;\n};","map":{"version":3,"sources":["C:/Users/AJ/Downloads/themeforest-tpjiC5zC-edemy-react-next-education-lms-template/edemy-react-next-online-courses-education-template/edemy-react-next/models/user.js"],"names":["Model","require","module","exports","sequelize","Sequelize","User","init","id","type","UUID","defaultValue","UUIDV4","primaryKey","name","STRING","email","isEmailPublic","BOOLEAN","password","designation","TEXT","about","location","phone","company","companyUrl","interests","passwordResetToken","passwordUpdatedAt","DATE","emailResetToken","profilePhoto","gender","fb_url","tw_url","insta_url","in_url","emailConfirmed","emailConfirmedAt","as_teacher_apply","as_teacher_confirmed","as_teacher_confirmed_at","as_teacher_req_desc","role","ENUM","values","active","agreedTerms","allowNull","modelName"],"mappings":"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","sourcesContent":["'use strict';\nconst {\n    Model\n} = require('sequelize');\nmodule.exports = (sequelize, Sequelize) => {\n    class User extends Model {\n        /**\n         * Helper method for defining associations.\n         * This method is not a part of Sequelize lifecycle.\n         * The `models/index` file will call this method automatically.\n         */\n        // static associate(models) {\n        //     // define association here\n        //     User.hasMany(models.Course, {\n        //         foreignKey: 'userId'\n        //     })\n        // }\n    };\n    User.init({\n        id: {\n            type: Sequelize.UUID,\n            defaultValue: Sequelize.UUIDV4,\n            primaryKey: true\n        },\n        name: {\n            type: Sequelize.STRING\n        },\n        email: {\n            type: Sequelize.STRING\n        },\n        isEmailPublic: {\n            type: Sequelize.BOOLEAN,\n            defaultValue: true\n        },\n        password: {\n            type: Sequelize.STRING\n        },\n        designation: {\n            type: Sequelize.TEXT\n        },\n        about: {\n            type: Sequelize.TEXT\n        },\n        location: {\n            type: Sequelize.STRING\n        },\n        phone: {\n            type: Sequelize.STRING\n        },\n        company: {\n            type: Sequelize.STRING\n        },\n        companyUrl: {\n            type: Sequelize.STRING\n        },\n        interests: {\n            type: Sequelize.STRING\n        },\n        passwordResetToken: {\n            type: Sequelize.UUID\n        },\n        passwordUpdatedAt: {\n            type: Sequelize.DATE\n        },\n        emailResetToken: {\n            type: Sequelize.UUID\n        },\n        profilePhoto: {\n            type: Sequelize.STRING\n        },\n        gender: {\n            type: Sequelize.STRING\n        },\n        fb_url: {\n            type: Sequelize.STRING\n        },\n        tw_url: {\n            type: Sequelize.STRING\n        },\n        insta_url: {\n            type: Sequelize.STRING\n        },\n        in_url: {\n            type: Sequelize.STRING\n        },\n        emailConfirmed: {\n            type: Sequelize.BOOLEAN,\n            defaultValue: false\n        },\n        emailConfirmedAt: {\n            type: Sequelize.DATE\n        },\n        as_teacher_apply: {\n            type: Sequelize.BOOLEAN,\n            defaultValue: false\n        },\n        as_teacher_confirmed: {\n            type: Sequelize.BOOLEAN\n        },\n        as_teacher_confirmed_at: {\n            type: Sequelize.DATE\n        },\n        as_teacher_req_desc: {\n            type: Sequelize.TEXT\n        },\n        role: {\n            type: Sequelize.ENUM,\n            values: ['student', 'admin', 'teacher'],\n            defaultValue: 'student'\n        },\n        active: {\n            type: Sequelize.BOOLEAN,\n            defaultValue: true\n        },\n        agreedTerms: {\n            allowNull: false,\n            type: Sequelize.BOOLEAN,\n            defaultValue: false\n        }\n    }, {\n        sequelize,\n        modelName: 'User',\n    });\n    return User;\n};"]},"metadata":{},"sourceType":"script"}