{"ast":null,"code":"import Cors from 'cors';\nimport initMiddleware from '@/lib/init-middleware';\nimport { enroled_courses as Enroled_courses } from '@/models/index'; // Initialize the cors middleware\n\nconst cors = initMiddleware( // You can read more about the available options here: https://github.com/expressjs/cors#configuration-options\nCors({\n  // Only allow requests with GET, POST and OPTIONS\n  methods: ['GET', 'POST', 'OPTIONS', 'DELETE', 'PUT']\n}));\nexport default (async (req, res) => {\n  await cors(req, res);\n  const {\n    id\n  } = req.query; // console.log(id)\n\n  try {\n    const enrolled = await Enroled_courses.findAndCountAll({\n      where: {\n        courseId: id\n      }\n    }); // console.log(course)\n\n    res.send(enrolled.count);\n  } catch (error) {\n    // console.log(error)\n    res.send(error.message);\n  }\n});","map":{"version":3,"sources":["C:/Users/AJ/Downloads/Spyberrys/Spyberrys/Spyberrys_app/pages/api/v1/courses/enrolled/[id].js"],"names":["Cors","initMiddleware","enroled_courses","Enroled_courses","cors","methods","req","res","id","query","enrolled","findAndCountAll","where","courseId","send","count","error","message"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SACIC,eAAe,IAAIC,eADvB,QAEO,gBAFP,C,CAIA;;AACA,MAAMC,IAAI,GAAGH,cAAc,EACvB;AACAD,IAAI,CAAC;AACD;AACAK,EAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,SAAhB,EAA2B,QAA3B,EAAqC,KAArC;AAFR,CAAD,CAFmB,CAA3B;AAQA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,QAAMH,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAV;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASF,GAAG,CAACG,KAAnB,CAF+B,CAI/B;;AACA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMP,eAAe,CAACQ,eAAhB,CAAgC;AACnDC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAEL;AAAZ;AAD4C,KAAhC,CAAvB,CADA,CAKA;;AAEAD,IAAAA,GAAG,CAACO,IAAJ,CAASJ,QAAQ,CAACK,KAAlB;AACH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZ;AACAT,IAAAA,GAAG,CAACO,IAAJ,CAASE,KAAK,CAACC,OAAf;AACH;AACJ,CAjBD","sourcesContent":["import Cors from 'cors'\nimport initMiddleware from '@/lib/init-middleware'\nimport { \n    enroled_courses as Enroled_courses\n} from '@/models/index'\n\n// Initialize the cors middleware\nconst cors = initMiddleware(\n    // You can read more about the available options here: https://github.com/expressjs/cors#configuration-options\n    Cors({\n        // Only allow requests with GET, POST and OPTIONS\n        methods: ['GET', 'POST', 'OPTIONS', 'DELETE', 'PUT'],\n    })\n)\n\nexport default async (req, res) => {\n    await cors(req, res)\n    const { id } = req.query\n\n    // console.log(id)\n    try {\n        const enrolled = await Enroled_courses.findAndCountAll({\n            where: { courseId: id },\n        })\n\n        // console.log(course)\n\n        res.send(enrolled.count)\n    } catch (error) {\n        // console.log(error)\n        res.send(error.message)\n    }\n}"]},"metadata":{},"sourceType":"module"}