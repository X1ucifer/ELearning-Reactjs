{"ast":null,"code":"import Cors from 'cors';\nimport initMiddleware from '@/lib/init-middleware';\nimport { courses as Course, users as User, enroled_courses as Enroled_courses } from '@/models/index'; // Initialize the cors middleware\n\nconst cors = initMiddleware( // You can read more about the available options here: https://github.com/expressjs/cors#configuration-options\nCors({\n  // Only allow requests with GET, POST and OPTIONS\n  methods: ['GET', 'POST', 'OPTIONS', 'DELETE', 'PUT']\n}));\nexport default (async (req, res) => {\n  await cors(req, res);\n\n  try {\n    const courses = await Course.findAll({\n      order: [['createdAt', 'DESC']],\n      limit: 3,\n      include: [{\n        model: User,\n        as: 'user',\n        attributes: ['name', 'profilePhoto']\n      }, {\n        model: Enroled_courses,\n        as: 'enroled_courses',\n        attributes: ['courseId']\n      }]\n    });\n    res.send({\n      courses\n    });\n  } catch (error) {\n    console.log(error);\n  }\n});","map":{"version":3,"sources":["C:/Users/AJ/Downloads/Spyberrys/Spyberrys/Spyberrys_app/pages/api/v1/courses/homepage-courses.js"],"names":["Cors","initMiddleware","courses","Course","users","User","enroled_courses","Enroled_courses","cors","methods","req","res","findAll","order","limit","include","model","as","attributes","send","error","console","log"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SACIC,OAAO,IAAIC,MADf,EAEIC,KAAK,IAAIC,IAFb,EAGIC,eAAe,IAAIC,eAHvB,QAIO,gBAJP,C,CAMA;;AACA,MAAMC,IAAI,GAAGP,cAAc,EACvB;AACAD,IAAI,CAAC;AACD;AACAS,EAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,SAAhB,EAA2B,QAA3B,EAAqC,KAArC;AAFR,CAAD,CAFmB,CAA3B;AAQA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,QAAMH,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAV;;AAEA,MAAI;AACA,UAAMT,OAAO,GAAG,MAAMC,MAAM,CAACS,OAAP,CAAe;AACjCC,MAAAA,KAAK,EAAE,CACH,CAAC,WAAD,EAAc,MAAd,CADG,CAD0B;AAIjCC,MAAAA,KAAK,EAAE,CAJ0B;AAKjCC,MAAAA,OAAO,EAAE,CAAC;AACNC,QAAAA,KAAK,EAAEX,IADD;AACOY,QAAAA,EAAE,EAAE,MADX;AAENC,QAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,cAAT;AAFN,OAAD,EAGP;AACEF,QAAAA,KAAK,EAAET,eADT;AAC0BU,QAAAA,EAAE,EAAE,iBAD9B;AAEEC,QAAAA,UAAU,EAAE,CAAC,UAAD;AAFd,OAHO;AALwB,KAAf,CAAtB;AAcAP,IAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACjB,MAAAA;AAAD,KAAT;AACH,GAhBD,CAgBE,OAAOkB,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,CAvBD","sourcesContent":["import Cors from 'cors'\nimport initMiddleware from '@/lib/init-middleware'\nimport { \n    courses as Course,\n    users as User,\n    enroled_courses as Enroled_courses\n} from '@/models/index'\n\n// Initialize the cors middleware\nconst cors = initMiddleware(\n    // You can read more about the available options here: https://github.com/expressjs/cors#configuration-options\n    Cors({\n        // Only allow requests with GET, POST and OPTIONS\n        methods: ['GET', 'POST', 'OPTIONS', 'DELETE', 'PUT'],\n    })\n)\n\nexport default async (req, res) => {\n    await cors(req, res)\n\n    try {\n        const courses = await Course.findAll({\n            order: [\n                ['createdAt', 'DESC']\n            ],\n            limit: 3,\n            include: [{\n                model: User, as: 'user',\n                attributes: ['name', 'profilePhoto']\n            },{\n                model: Enroled_courses, as: 'enroled_courses',\n                attributes: ['courseId']\n            }],\n        })\n\n        res.send({courses})\n    } catch (error) {\n        console.log(error)\n    }\n\n}"]},"metadata":{},"sourceType":"module"}