{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Router from 'next/router';\n\nconst SearchForm = () => {\n  const [search, setSearch] = React.useState({\n    search: ''\n  });\n\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSearch(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      [name]: value\n    })); // console.log(\"dsddsd\")\n  };\n\n  const handleSearch = e => {\n    e.preventDefault();\n    Router.push({\n      pathname: '/courses/search',\n      query: {\n        q: search.search\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    className: \"search-box\",\n    onSubmit: handleSearch,\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      type: \"text\",\n      className: \"input-search\",\n      placeholder: \"Search for anything\",\n      name: \"search\",\n      value: search.search,\n      onChange: handleOnChange\n    }), /*#__PURE__*/_jsx(\"button\", {\n      type: \"submit\",\n      children: /*#__PURE__*/_jsx(\"i\", {\n        className: \"flaticon-search\"\n      })\n    })]\n  });\n};\n\nexport default SearchForm;","map":null,"metadata":{},"sourceType":"module"}