{"ast":null,"code":"import Cors from 'cors';\nimport initMiddleware from '@/lib/init-middleware';\nimport { courses as Course, users as User, videos as Video } from '@/models/index'; // Initialize the cors middleware\n\nconst cors = initMiddleware( // You can read more about the available options here: https://github.com/expressjs/cors#configuration-options\nCors({\n  // Only allow requests with GET, POST and OPTIONS\n  methods: ['GET', 'POST', 'OPTIONS', 'DELETE', 'PUT']\n}));\nexport default (async (req, res) => {\n  await cors(req, res);\n  const {\n    id\n  } = req.query; // console.log(id)\n\n  try {\n    const course = await Course.findOne({\n      where: {\n        id: id\n      },\n      include: [{\n        model: User,\n        as: 'user'\n      }, {\n        model: Video,\n        as: 'videos',\n        attributes: ['name'],\n        order: [['createdAt', 'ASC']]\n      }]\n    }); // console.log(course)\n\n    res.send({\n      course\n    });\n  } catch (error) {\n    // console.log(error)\n    res.send(error.message);\n  }\n});","map":{"version":3,"sources":["C:/Users/AJ/Downloads/Spyberrys/Spyberrys/Spyberrys_app/pages/api/v1/courses/course/[id].js"],"names":["Cors","initMiddleware","courses","Course","users","User","videos","Video","cors","methods","req","res","id","query","course","findOne","where","include","model","as","attributes","order","send","error","message"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SACIC,OAAO,IAAIC,MADf,EAEIC,KAAK,IAAIC,IAFb,EAGIC,MAAM,IAAIC,KAHd,QAIO,gBAJP,C,CAMA;;AACA,MAAMC,IAAI,GAAGP,cAAc,EACvB;AACAD,IAAI,CAAC;AACD;AACAS,EAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,SAAhB,EAA2B,QAA3B,EAAqC,KAArC;AAFR,CAAD,CAFmB,CAA3B;AAQA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,QAAMH,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAV;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASF,GAAG,CAACG,KAAnB,CAF+B,CAI/B;;AACA,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMX,MAAM,CAACY,OAAP,CAAe;AAChCC,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,EAAE,EAAEA;AAAN,OADyB;AAGhCK,MAAAA,OAAO,EAAE,CAAC;AACNC,QAAAA,KAAK,EAAEb,IADD;AACOc,QAAAA,EAAE,EAAE;AADX,OAAD,EAEP;AACED,QAAAA,KAAK,EAAEX,KADT;AACgBY,QAAAA,EAAE,EAAE,QADpB;AAEEC,QAAAA,UAAU,EAAE,CAAC,MAAD,CAFd;AAGEC,QAAAA,KAAK,EAAE,CACH,CAAC,WAAD,EAAc,KAAd,CADG;AAHT,OAFO;AAHuB,KAAf,CAArB,CADA,CAeA;;AAEAV,IAAAA,GAAG,CAACW,IAAJ,CAAS;AAAER,MAAAA;AAAF,KAAT;AACH,GAlBD,CAkBE,OAAOS,KAAP,EAAc;AACZ;AACAZ,IAAAA,GAAG,CAACW,IAAJ,CAASC,KAAK,CAACC,OAAf;AACH;AACJ,CA3BD","sourcesContent":["import Cors from 'cors'\nimport initMiddleware from '@/lib/init-middleware'\nimport { \n    courses as Course, \n    users as User,\n    videos as Video\n} from '@/models/index'\n\n// Initialize the cors middleware\nconst cors = initMiddleware(\n    // You can read more about the available options here: https://github.com/expressjs/cors#configuration-options\n    Cors({\n        // Only allow requests with GET, POST and OPTIONS\n        methods: ['GET', 'POST', 'OPTIONS', 'DELETE', 'PUT'],\n    })\n)\n\nexport default async (req, res) => {\n    await cors(req, res)\n    const { id } = req.query\n\n    // console.log(id)\n    try {\n        const course = await Course.findOne({\n            where: { id: id },\n\n            include: [{\n                model: User, as: 'user'\n            },{\n                model: Video, as: 'videos',\n                attributes: ['name'],\n                order: [\n                    ['createdAt', 'ASC']\n                ],\n            }]\n        })\n\n        // console.log(course)\n\n        res.send({ course })\n    } catch (error) {\n        // console.log(error)\n        res.send(error.message)\n    }\n}"]},"metadata":{},"sourceType":"module"}