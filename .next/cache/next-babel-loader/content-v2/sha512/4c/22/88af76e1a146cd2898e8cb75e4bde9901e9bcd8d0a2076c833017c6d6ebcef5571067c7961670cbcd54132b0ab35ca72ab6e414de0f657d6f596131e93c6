{"ast":null,"code":"'use strict'; // main model file\n\nvar _user = _interopRequireDefault(require(\"./user\"));\n\nvar _course = _interopRequireDefault(require(\"./course\"));\n\nvar _video = _interopRequireDefault(require(\"./video\"));\n\nvar _enroled_courses = _interopRequireDefault(require(\"./enroled_courses\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst Sequelize = require('sequelize');\n\nconst basename = path.basename(__filename);\nconst env = \"development\" || 'development';\n\nconst config = require(__dirname + '/../config/config.json')[env];\n\nconst db = {};\nlet sequelize;\n\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\ndb.users = (0, _user.default)(sequelize, Sequelize);\ndb.courses = (0, _course.default)(sequelize, Sequelize);\ndb.videos = (0, _video.default)(sequelize, Sequelize);\ndb.enroled_courses = (0, _enroled_courses.default)(sequelize, Sequelize); // hasMany relationshipt with user and course\n\ndb.users.hasMany(db.courses, {\n  as: 'courses',\n  foreignKey: 'userId'\n});\ndb.courses.belongsTo(db.users, {\n  foreignKey: 'userId',\n  as: 'user'\n}); // hasMany relationshipt with course and videos\n\ndb.courses.hasMany(db.videos, {\n  as: 'videos',\n  foreignKey: 'courseId'\n});\ndb.videos.belongsTo(db.courses, {\n  foreignKey: 'courseId',\n  as: 'course'\n}); // hasMany relationshipt with user and videos\n\ndb.users.hasMany(db.videos, {\n  as: 'videos',\n  foreignKey: 'userId'\n});\ndb.videos.belongsTo(db.courses, {\n  foreignKey: 'userId',\n  as: 'user'\n}); // hasMany relationshipt with course and enroled\n\ndb.courses.hasMany(db.enroled_courses, {\n  as: 'enroled_courses',\n  foreignKey: 'courseId'\n});\ndb.enroled_courses.belongsTo(db.courses, {\n  foreignKey: 'courseId',\n  as: 'course'\n}); // hasMany relationshipt with user and enroled\n\ndb.users.hasMany(db.enroled_courses, {\n  as: 'enroled_courses',\n  foreignKey: 'userId'\n});\ndb.enroled_courses.belongsTo(db.users, {\n  foreignKey: 'userId',\n  as: 'user'\n}); // console.log('######', db)\n\nmodule.exports = db;","map":{"version":3,"sources":["C:/Users/AJ/Downloads/themeforest-tpjiC5zC-edemy-react-next-education-lms-template/edemy-react-next-online-courses-education-template/edemy-react-next/models/index.js"],"names":["fs","require","path","Sequelize","basename","__filename","env","config","__dirname","db","sequelize","use_env_variable","process","database","username","password","users","courses","videos","enroled_courses","hasMany","as","foreignKey","belongsTo","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n// main model file\nconst fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(__dirname + '/../config/config.json')[env];\nconst db = {};\nimport User from './user'\nimport Course from './course'\nimport Video from './video'\nimport Enroled_courses from './enroled_courses'\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\ndb.users = User(sequelize, Sequelize)\ndb.courses = Course(sequelize, Sequelize)\ndb.videos = Video(sequelize, Sequelize)\ndb.enroled_courses = Enroled_courses(sequelize, Sequelize)\n\n// hasMany relationshipt with user and course\ndb.users.hasMany(db.courses, { \n  as: 'courses',\n  foreignKey: 'userId'\n})\ndb.courses.belongsTo(db.users, {\n  foreignKey: 'userId',\n  as: 'user'\n})\n\n// hasMany relationshipt with course and videos\ndb.courses.hasMany(db.videos, { \n  as: 'videos',\n  foreignKey: 'courseId'\n})\ndb.videos.belongsTo(db.courses, {\n  foreignKey: 'courseId',\n  as: 'course'\n})\n\n// hasMany relationshipt with user and videos\ndb.users.hasMany(db.videos, { \n  as: 'videos',\n  foreignKey: 'userId'\n})\ndb.videos.belongsTo(db.courses, {\n  foreignKey: 'userId',\n  as: 'user'\n})\n\n// hasMany relationshipt with course and enroled\ndb.courses.hasMany(db.enroled_courses, { \n  as: 'enroled_courses',\n  foreignKey: 'courseId'\n})\ndb.enroled_courses.belongsTo(db.courses, {\n  foreignKey: 'courseId',\n  as: 'course'\n})\n\n// hasMany relationshipt with user and enroled\ndb.users.hasMany(db.enroled_courses, { \n  as: 'enroled_courses',\n  foreignKey: 'userId'\n})\ndb.enroled_courses.belongsTo(db.users, {\n  foreignKey: 'userId',\n  as: 'user'\n})\n\n// console.log('######', db)\n\nmodule.exports = db;\n"]},"metadata":{},"sourceType":"script"}