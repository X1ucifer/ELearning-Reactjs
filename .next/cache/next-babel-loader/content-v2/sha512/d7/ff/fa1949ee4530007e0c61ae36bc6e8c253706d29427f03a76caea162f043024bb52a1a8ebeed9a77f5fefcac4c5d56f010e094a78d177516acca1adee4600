{"ast":null,"code":"'use strict'; // main model file\n\nvar _user = _interopRequireDefault(require(\"./user\"));\n\nvar _course = _interopRequireDefault(require(\"./course\"));\n\nvar _video = _interopRequireDefault(require(\"./video\"));\n\nvar _enroled_courses = _interopRequireDefault(require(\"./enroled_courses\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst Sequelize = require('sequelize');\n\nconst basename = path.basename(__filename);\nconst env = \"production\" || 'development';\n\nconst config = require(__dirname + '/../config/config.json')[env];\n\nconst db = {};\nlet sequelize;\n\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\ndb.users = (0, _user.default)(sequelize, Sequelize);\ndb.courses = (0, _course.default)(sequelize, Sequelize);\ndb.videos = (0, _video.default)(sequelize, Sequelize);\ndb.enroled_courses = (0, _enroled_courses.default)(sequelize, Sequelize); // hasMany relationshipt with user and course\n\ndb.users.hasMany(db.courses, {\n  as: 'courses',\n  foreignKey: 'userId'\n});\ndb.courses.belongsTo(db.users, {\n  foreignKey: 'userId',\n  as: 'user'\n}); // hasMany relationshipt with course and videos\n\ndb.courses.hasMany(db.videos, {\n  as: 'videos',\n  foreignKey: 'courseId'\n});\ndb.videos.belongsTo(db.courses, {\n  foreignKey: 'courseId',\n  as: 'course'\n}); // hasMany relationshipt with user and videos\n\ndb.users.hasMany(db.videos, {\n  as: 'videos',\n  foreignKey: 'userId'\n});\ndb.videos.belongsTo(db.courses, {\n  foreignKey: 'userId',\n  as: 'user'\n}); // hasMany relationshipt with course and enroled\n\ndb.courses.hasMany(db.enroled_courses, {\n  as: 'enroled_courses',\n  foreignKey: 'courseId'\n});\ndb.enroled_courses.belongsTo(db.courses, {\n  foreignKey: 'courseId',\n  as: 'course'\n}); // hasMany relationshipt with user and enroled\n\ndb.users.hasMany(db.enroled_courses, {\n  as: 'enroled_courses',\n  foreignKey: 'userId'\n});\ndb.enroled_courses.belongsTo(db.users, {\n  foreignKey: 'userId',\n  as: 'user'\n}); // console.log('######', db)\n\nmodule.exports = db;","map":null,"metadata":{},"sourceType":"script"}