{"ast":null,"code":"import Cors from 'cors';\nimport { Op } from \"sequelize\";\nimport initMiddleware from '../../../../lib/init-middleware';\nimport { users as User } from '../../../../models'; // Initialize the cors middleware\n\nconst cors = initMiddleware( // You can read more about the available options here: https://github.com/expressjs/cors#configuration-options\nCors({\n  // Only allow requests with GET, POST and OPTIONS\n  methods: ['GET', 'POST', 'OPTIONS', 'DELETE', 'PUT']\n}));\nexport default (async (req, res) => {\n  await cors(req, res);\n\n  if (!(\"authorization\" in req.headers)) {\n    return res.status(401).json({\n      message: \"No autorization token\"\n    });\n  }\n\n  try {\n    const pendingRequests = await User.findAll({\n      where: {\n        [Op.and]: [{\n          as_teacher_apply: true\n        }, {\n          as_teacher_confirmed: null\n        }]\n      }\n    }); // console.log(pendingRequests)\n\n    res.send({\n      pendingRequests: pendingRequests\n    });\n  } catch (error) {\n    console.log(error);\n    res.send(\"Error! Try again\");\n  }\n});","map":null,"metadata":{},"sourceType":"module"}