{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { parseCookies } from 'nookies';\nimport axios from 'axios';\nimport { Alert } from 'reactstrap';\nimport baseUrl from '@/utils/baseUrl';\nimport { Spinner } from 'reactstrap';\nimport toast from 'react-hot-toast';\nimport catchErrors from '@/utils/catchErrors';\nimport PageBanner from '@/components/Common/PageBanner';\nimport Link from '@/utils/ActiveLink';\nconst INIT_VIDEO = {\n  video_url: '',\n  order: 0,\n  name: '',\n  description: '',\n  courseId: ''\n};\n\nconst UploadCourseVideo = ({\n  courses\n}) => {\n  // console.log(courses)\n  const {\n    token\n  } = parseCookies();\n  const [video, setVideo] = React.useState(INIT_VIDEO);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  React.useEffect(() => {\n    const {\n      order,\n      video_url,\n      name\n    } = video;\n    const isVideo = Object.values({\n      video_url,\n      name,\n      order\n    }).every(el => Boolean(el));\n    isVideo ? setDisabled(false) : setDisabled(true);\n  }, [video]);\n\n  const handleVideoUpload = async () => {\n    // console.log(post.file_url)\n    const data = new FormData();\n    data.append('file', video.video_url);\n    data.append('upload_preset', 'akhil_videos');\n    data.append('cloud_name', 'jinu');\n    const response = await axios.post(process.env.CLOUDINARY_VIDEO_URL, data);\n    const mediaUrl = response.data.url;\n    return mediaUrl;\n  };\n\n  const handleChange = e => {\n    // console.log(d.value)\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n\n    if (name === 'video_url') {\n      const videoSize = files[0].size / 1024 / 1024;\n\n      if (videoSize > 20) {\n        addToast('The video size greater than 20 MB. Make sure less than 20 MB.', {\n          appearance: 'error'\n        });\n        e.target.value = null;\n        return;\n      }\n\n      setVideo(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n        video_url: files[0]\n      }));\n    } else {\n      setVideo(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n        [name]: value\n      }));\n    } // console.log(video);\n\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      let videoUrl = '';\n\n      if (video.video_url) {\n        const videoUpload = await handleVideoUpload();\n        videoUrl = videoUpload.replace(/^http:\\/\\//i, 'https://');\n      } // console.log(videoUrl)\n\n\n      const url = `${baseUrl}/api/v1/courses/course/video-upload`;\n      const {\n        order,\n        name,\n        description,\n        courseId\n      } = video;\n      const payload = {\n        order,\n        name,\n        description,\n        courseId,\n        videoUrl\n      };\n      const response = await axios.post(url, payload, {\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log(response.data);\n      setLoading(false);\n      toast.success(response.data);\n      setVideo(INIT_VIDEO);\n    } catch (err) {\n      catchErrors(err, setError);\n      toast.error(error);\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(PageBanner, {\n      pageTitle: \"Upload Course Video\",\n      homePageUrl: \"/\",\n      homePageText: \"Home\",\n      activePageText: \"Upload Course Video\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"ptb-100\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"container\",\n        children: [courses.length == 0 && /*#__PURE__*/_jsxs(Alert, {\n          color: \"danger\",\n          className: \"text-center\",\n          children: [\"You have to create course first here \", /*#__PURE__*/_jsx(Link, {\n            href: \"/teacher/course/create\",\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: \"Create Course\"\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"col-md-4 col-lg-4\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"td-sidebar\",\n              children: /*#__PURE__*/_jsxs(\"ul\", {\n                children: [/*#__PURE__*/_jsx(\"li\", {\n                  children: /*#__PURE__*/_jsx(Link, {\n                    href: \"/teacher/courses\",\n                    activeClassName: \"active\",\n                    children: /*#__PURE__*/_jsx(\"a\", {\n                      children: \"My Courses\"\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(\"li\", {\n                  children: /*#__PURE__*/_jsx(Link, {\n                    href: \"/teacher/course/create\",\n                    activeClassName: \"active\",\n                    children: /*#__PURE__*/_jsx(\"a\", {\n                      children: \"Create A Course\"\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(\"li\", {\n                  children: /*#__PURE__*/_jsx(Link, {\n                    href: \"/teacher/courses/course-edit\",\n                    activeClassName: \"active\",\n                    children: /*#__PURE__*/_jsx(\"a\", {\n                      children: \"Edit My Course\"\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(\"li\", {\n                  children: /*#__PURE__*/_jsx(Link, {\n                    href: \"/teacher/course/upload-course-video\",\n                    activeClassName: \"active\",\n                    children: /*#__PURE__*/_jsx(\"a\", {\n                      children: \"Upload Course Video\"\n                    })\n                  })\n                })]\n              })\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-md-8 col-lg-8\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"border-box\",\n              children: /*#__PURE__*/_jsxs(\"form\", {\n                onSubmit: handleSubmit,\n                children: [loading && /*#__PURE__*/_jsx(\"h3\", {\n                  className: \"loading-spinner\",\n                  children: /*#__PURE__*/_jsx(\"div\", {\n                    className: \"d-table\",\n                    children: /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"d-table-cell\",\n                      children: [/*#__PURE__*/_jsx(Spinner, {\n                        color: \"danger\"\n                      }), \" Vide uploading...\"]\n                    })\n                  })\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    children: \"Select Course\"\n                  }), /*#__PURE__*/_jsxs(\"select\", {\n                    onChange: handleChange,\n                    name: \"courseId\",\n                    className: \"form-control\",\n                    children: [/*#__PURE__*/_jsx(\"option\", {\n                      children: \"Select Course\"\n                    }), courses.map(course => /*#__PURE__*/_jsx(\"option\", {\n                      value: course.id,\n                      children: course.title\n                    }, course.id))]\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    children: \"Video Order (1 or 2...)\"\n                  }), /*#__PURE__*/_jsx(\"input\", {\n                    type: \"number\",\n                    placeholder: \"Order Number\",\n                    className: \"form-control\",\n                    name: \"order\",\n                    value: video.order,\n                    onChange: handleChange\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    children: \"Name\"\n                  }), /*#__PURE__*/_jsx(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Enter course title\",\n                    className: \"form-control\",\n                    name: \"name\",\n                    value: video.name,\n                    onChange: handleChange\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    children: \"Deescription\"\n                  }), /*#__PURE__*/_jsx(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Enter course title\",\n                    className: \"form-control\",\n                    name: \"description\",\n                    value: video.description,\n                    onChange: handleChange\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsx(\"label\", {\n                    children: \"Video\"\n                  }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"input\", {\n                    type: \"file\",\n                    name: \"video_url\",\n                    accept: \"video/*\",\n                    onChange: handleChange\n                  })]\n                }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"button\", {\n                  className: \"default-btn\",\n                  disabled: disabled || loading,\n                  children: [/*#__PURE__*/_jsx(\"i\", {\n                    className: \"flaticon-right-chevron\"\n                  }), \"Upload\"]\n                })]\n              })\n            })\n          })]\n        })]\n      })\n    })]\n  });\n};\n\nUploadCourseVideo.getInitialProps = async ctx => {\n  const {\n    token\n  } = parseCookies(ctx);\n\n  if (!token) {\n    return {\n      courses: []\n    };\n  }\n\n  const payload = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const url = `${baseUrl}/api/v1/courses/my-courses`;\n  const response = await axios.get(url, payload); // console.log(response.data)\n\n  return response.data;\n};\n\nexport default UploadCourseVideo;","map":null,"metadata":{},"sourceType":"module"}