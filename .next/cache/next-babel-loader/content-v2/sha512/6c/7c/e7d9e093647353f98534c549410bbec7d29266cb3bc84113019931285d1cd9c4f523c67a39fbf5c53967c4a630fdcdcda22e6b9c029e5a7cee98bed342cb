{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\AJ\\\\Downloads\\\\Spyberrys\\\\Spyberrys\\\\Spyberrys_app\\\\components\\\\SingleCourses\\\\CoursesDetailsSidebar.js\";\nimport React from 'react';\nimport ModalVideo from 'react-modal-video';\nimport axios from 'axios';\nimport cookie from 'js-cookie';\nimport CheckoutBtn from '@/components/CheckoutButton/CheckoutBtn';\nimport baseUrl from '@/utils/baseUrl';\nimport catchErrors from '@/utils/catchErrors';\nimport toast from 'react-hot-toast';\nimport { useRouter } from 'next/router';\n\nconst CoursesDetailsSidebar = ({\n  id,\n  price,\n  user,\n  profilePhoto,\n  lessons,\n  duration,\n  title,\n  course_preview_video,\n  loggedInUser\n}) => {\n  // console.log(loggedInUser)\n  const {\n    enroled_courses\n  } = loggedInUser ? loggedInUser : '';\n  const router = useRouter(); // Popup Video\n\n  const [enrolled, setEnrolled] = React.useState(0);\n  React.useEffect(() => {\n    const countEnrolled = async () => {\n      const url = `${baseUrl}/api/v1/courses/enrolled/${id}`;\n      const response = await axios.get(url);\n      setEnrolled(response.data);\n    }; // setEnrolled(response.data.enrolled)\n\n\n    countEnrolled();\n  }, []);\n\n  const checkBoughtAlready = () => {\n    return enroled_courses.filter(function (val) {\n      return val.courseId === id;\n    }).length > 0;\n  }; // console.log(checkBoughtAlready())\n\n\n  const handleCheckout = async paymentData => {\n    try {\n      const token = cookie.get(\"token\");\n      const stripeTotal = Number((price * 100).toFixed(2));\n      paymentData['courseId'] = id;\n      paymentData['stripeTotal'] = stripeTotal;\n      const url = `${baseUrl}/api/v1/courses/checkout`;\n      const payload = {\n        paymentData\n      };\n      const headers = {\n        headers: {\n          Authorization: token\n        }\n      };\n      const response = await axios.post(url, payload, headers);\n      toast.success(response.data);\n    } catch (error) {\n      catchErrors(error, window.alert);\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loggedInUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: checkBoughtAlready() ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"default-btn\",\n            disabled: true,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"flaticon-tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), \" Enrolled \", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 75\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(CheckoutBtn, {\n            handleCheckout: handleCheckout,\n            image: profilePhoto,\n            name: title,\n            price: price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"default-btn\",\n          onClick: () => {\n            router.push('/authentication');\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"flaticon-tag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), \" Login To Buy \", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 75\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\nexport default CoursesDetailsSidebar;","map":{"version":3,"sources":["C:/Users/AJ/Downloads/Spyberrys/Spyberrys/Spyberrys_app/components/SingleCourses/CoursesDetailsSidebar.js"],"names":["React","ModalVideo","axios","cookie","CheckoutBtn","baseUrl","catchErrors","toast","useRouter","CoursesDetailsSidebar","id","price","user","profilePhoto","lessons","duration","title","course_preview_video","loggedInUser","enroled_courses","router","enrolled","setEnrolled","useState","useEffect","countEnrolled","url","response","get","data","checkBoughtAlready","filter","val","courseId","length","handleCheckout","paymentData","token","stripeTotal","Number","toFixed","payload","headers","Authorization","post","success","error","window","alert","console","log","message","push"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ModalVideo from 'react-modal-video'\r\nimport axios from 'axios'\r\nimport cookie from 'js-cookie'\r\nimport CheckoutBtn from '@/components/CheckoutButton/CheckoutBtn'\r\nimport baseUrl from '@/utils/baseUrl'\r\nimport catchErrors from '@/utils/catchErrors'\r\nimport toast from 'react-hot-toast'\r\nimport { useRouter } from 'next/router'\r\n\r\nconst CoursesDetailsSidebar = ({\r\n    id, price, user, profilePhoto, lessons, duration, title, course_preview_video, loggedInUser\r\n}) => {\r\n    // console.log(loggedInUser)\r\n    const { enroled_courses } = loggedInUser ? loggedInUser : ''\r\n    const router = useRouter()\r\n    // Popup Video\r\n\tconst [enrolled, setEnrolled] = React.useState(0)\r\n\t\r\n\r\n    React.useEffect(() => {\r\n        const countEnrolled = async () => {\r\n            const url = `${baseUrl}/api/v1/courses/enrolled/${id}`\r\n            const response = await axios.get(url)\r\n            setEnrolled(response.data)\r\n        }\r\n        // setEnrolled(response.data.enrolled)\r\n        countEnrolled()\r\n    }, [])\r\n\r\n    const checkBoughtAlready = () => {\r\n        return enroled_courses.filter(function (val) {\r\n            return (val.courseId === id);\r\n        }).length > 0;\r\n    }\r\n\r\n    // console.log(checkBoughtAlready())\r\n\r\n    \r\n    const handleCheckout = async (paymentData) => {\r\n        try {\r\n            const token = cookie.get(\"token\")\r\n            const stripeTotal = Number((price * 100).toFixed(2));\r\n            paymentData['courseId'] = id\r\n            paymentData['stripeTotal'] = stripeTotal\r\n            const url = `${baseUrl}/api/v1/courses/checkout`;\r\n            const payload = { paymentData };\r\n            const headers = {headers: {Authorization: token}};\r\n            const response = await axios.post(url, payload, headers);\r\n            toast.success(response.data)\r\n        } catch (error) {\r\n            catchErrors(error, window.alert);\r\n            console.log(error.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            {/* If you want to change the video need to update videoID */}\r\n           \r\n            \r\n            <div >\r\n               \r\n\r\n               \r\n\r\n                <div >\r\n                    {/* <Link href=\"#\">\r\n                        <a className=\"default-btn\">\r\n                            <i className=\"flaticon-shopping-cart\"></i> Add to Cart <span></span>\r\n                        </a>\r\n                    </Link>\r\n                    <Link href=\"#\">\r\n                        <a className=\"default-btn\">\r\n                            <i className=\"flaticon-tag\"></i> Buy Now <span></span>\r\n                        </a>\r\n                    </Link> */}\r\n                    {loggedInUser ? (\r\n                        <>\r\n                        {checkBoughtAlready() ? (\r\n                            <button className=\"default-btn\" disabled>\r\n                                <i className=\"flaticon-tag\"></i> Enrolled <span></span>\r\n                            </button>\r\n                        ) : (\r\n                            <CheckoutBtn \r\n                                handleCheckout={handleCheckout}\r\n                                image={profilePhoto}\r\n                                name={title}\r\n                                price={price}\r\n                            />\r\n                        )}\r\n                        </>\r\n                    ) : (\r\n                        <button className=\"default-btn\" onClick={() => {router.push('/authentication')}}>\r\n                            <i className=\"flaticon-tag\"></i> Login To Buy <span></span>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CoursesDetailsSidebar;"]},"metadata":{},"sourceType":"module"}