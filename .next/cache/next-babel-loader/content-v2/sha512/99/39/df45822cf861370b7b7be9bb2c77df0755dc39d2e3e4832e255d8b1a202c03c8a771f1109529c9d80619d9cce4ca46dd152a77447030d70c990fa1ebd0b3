{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { parseCookies } from 'nookies';\nimport { Spinner, Alert } from 'reactstrap';\nimport axios from 'axios';\nimport { useToasts } from 'react-toast-notifications';\nimport catchErrors from '@/utils/catchErrors';\nimport baseUrl from '@/utils/baseUrl';\n\nconst RegisterForm = ({\n  user\n}) => {\n  const {\n    token\n  } = parseCookies();\n  const {\n    addToast\n  } = useToasts();\n  const INIT_APPLY = {\n    name: user.name,\n    email: user.email,\n    number: user.phone,\n    subject: \"Becaome A Teacher!\",\n    as_teacher_apply: true,\n    as_teacher_req_desc: ''\n  };\n  const [apply, setApply] = React.useState(INIT_APPLY);\n  const [initApply, setInitApply] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [disabled, setDisabled] = React.useState(true);\n  const [error, setError] = React.useState('');\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  React.useEffect(() => {\n    const isApply = Object.values(apply).every(el => Boolean(el));\n    isApply ? setDisabled(false) : setDisabled(true);\n  }, [apply]);\n\n  const handleChange = e => {\n    // console.log(d.value)\n    const {\n      name,\n      value\n    } = e.target;\n    setApply(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      [name]: value\n    })); // console.log(apply);\n  };\n\n  const handleApply = async () => {\n    // e.preventDefault()\n    try {\n      setLoading(true);\n      setError('');\n      const url = `${baseUrl}/api/v1/user/apply`;\n\n      const payload = _objectSpread({}, apply);\n\n      const response = await axios.post(url, payload, {\n        headers: {\n          Authorization: token\n        }\n      });\n      addToast(response.data, {\n        appearance: 'success'\n      });\n      setApply(INIT_APPLY);\n      setInitApply(true);\n    } catch (error) {\n      catchErrors(error, setError);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const isApplied = user && user.as_teacher_apply === true && user.as_teacher_confirmed === null;\n  const isTeacher = user && user.as_teacher_apply === true && user.as_teacher_confirmed === true;\n  const isCancelled = user && user.as_teacher_apply === true && user.as_teacher_confirmed === false;\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"teacher-register-area ptb-100\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"teacher-register-box\",\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          children: \"Register to Become an Intructor\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          children: \"Your email address will not be published. Required fields are marked *\"\n        }), isApplied && /*#__PURE__*/_jsx(Alert, {\n          color: \"info mt-15\",\n          children: \"Your application is pending now, you will get notice soon.\"\n        }), isTeacher && /*#__PURE__*/_jsx(Alert, {\n          color: \"success mt-15\",\n          children: \"You already a teacher & create much exciting content.\"\n        }), isCancelled && /*#__PURE__*/_jsx(Alert, {\n          color: \"success mt-15\",\n          children: \"You already applied & you got cancellation.\"\n        }), /*#__PURE__*/_jsx(\"form\", {\n          id: \"contactForm\",\n          onSubmit: handleSubmit(handleApply),\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: \"col-lg-6 col-md-6\",\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  name: \"name\",\n                  placeholder: \"Your Name\",\n                  value: apply.name,\n                  onChange: handleChange\n                })\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"col-lg-6 col-md-6\",\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  name: \"email\",\n                  placeholder: \"Your email address\",\n                  value: apply.email,\n                  onChange: handleChange\n                })\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"col-lg-12 col-md-6\",\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  name: \"number\",\n                  placeholder: \"Your phone number\",\n                  value: apply.number,\n                  onChange: handleChange\n                })\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"col-lg-12 col-md-12\",\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  name: \"subject\",\n                  placeholder: \"Your Subject\",\n                  value: apply.subject,\n                  onChange: handleChange\n                })\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"col-lg-12 col-md-12\",\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsx(\"textarea\", {\n                  name: \"text\",\n                  cols: \"30\",\n                  rows: \"5\",\n                  placeholder: \"Please tell us about your teaching profession\",\n                  className: \"form-control\",\n                  name: \"as_teacher_req_desc\",\n                  value: apply.as_teacher_req_desc,\n                  onChange: handleChange,\n                  ref: register({\n                    required: true\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"invalid-feedback\",\n                  style: {\n                    display: 'block'\n                  },\n                  children: errors.text && 'Details is required.'\n                })]\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"col-lg-12 col-sm-12\",\n              children: !(initApply || isApplied || isTeacher || isCancelled) && /*#__PURE__*/_jsx(\"div\", {\n                className: \"text-right\",\n                children: /*#__PURE__*/_jsxs(\"button\", {\n                  disabled: disabled || loading,\n                  type: \"submit\",\n                  className: \"default-btn\",\n                  children: [\"Apply Now\", loading ? /*#__PURE__*/_jsx(Spinner, {\n                    color: \"success\"\n                  }) : '']\n                })\n              })\n            })]\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default RegisterForm;","map":null,"metadata":{},"sourceType":"module"}